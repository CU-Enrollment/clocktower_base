{#
/**
 * @file
 * Default theme implementation for a field.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 * @see template_preprocess_field()
 *
 * @ingroup themeable
 */
#}
{%
  set title_classes = [
    label_display == 'visually_hidden' ? 'visually-hidden',
  ]
%}

{% set count = 1 %}
    
          
      <div class="tabs" aria-orientation="horizontal" role="tablist">
        {% for item in items %}
          {% if count == '1' %}
            <button role="tab" class="active" aria-selected="true" aria-controls="tabpanel-{{ count }}" tabindex="0" id="tab-{{ count }}"><span>{{item.content['#paragraph'].field_tab[0].value}}</span></button>   
          {% else %}
            <button role="tab" aria-selected="false" aria-controls="tabpanel-{{ count }}" tabindex="-1" id="tab-{{ count }}"><span>{{item.content['#paragraph'].field_tab[0].value}}</span></button>    
          {% endif %}   

          {% set count = count + 1 %}
        {% endfor %}
      </div>

      <div class="tabgroup">
      {% set count = 1 %}

        {% for item in items %}
          <div class="{% if count == '1' %}active{% endif %}" role="tabpanel" id="tabpanel-{{ count }}">
            {{ item.content['#paragraph'].field_panel_content[0].value|raw }}
          </div>
          {% set count = count + 1 %}

        {% endfor %}
      </div>
   

